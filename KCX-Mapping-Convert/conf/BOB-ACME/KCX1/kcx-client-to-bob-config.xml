<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:file="http://www.mulesource.org/schema/mule/file/2.1"
	xmlns:xm="http://www.mulesource.org/schema/mule/xml/2.1"
	xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.1"
	xsi:schemaLocation="http://www.mulesource.org/schema/mule/core/2.1 http://www.mulesource.org/schema/mule/core/2.1/mule.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.1.xsd
		http://www.mulesource.org/schema/mule/jms/2.1 http://www.mulesource.org/schema/mule/jms/2.1/mule-jms.xsd
		http://www.mulesource.org/schema/mule/file/2.1 http://www.mulesource.org/schema/mule/file/2.1/mule-file.xsd
		http://www.mulesource.org/schema/mule/xml/2.1 http://www.mulesource.org/schema/mule/xml/2.1/mule-xml.xsd
		http://www.mulesource.org/schema/mule/vm/2.1 http://www.mulesource.org/schema/mule/vm/2.1/mule-vm.xsd">

	<!-- FREE TO ALTER -->
	<!-- this is fully editable to get data into the solution, publish data out to queues which you consume in 
		kcx-client-to-bob-transform-config.xml -->

        <spring:beans>
          <spring:bean name="regexFileFilter" class="org.mule.transport.file.filters.FilenameRegexFilter">
            <spring:property name="pattern" value="[^.].*"/>
            <spring:property name="caseSensitive" value="false"/>
          </spring:bean>
        </spring:beans>

	<model name="clientToBOBModel">
		<default-service-exception-strategy>
			<vm:outbound-endpoint path="error.queue"/>
		</default-service-exception-strategy>

                <service name="clientKIDSToBOBService">
                  <inbound>
                    <file:inbound-endpoint path="${kids.inbound.file.address}" connector-ref="fileConnector-Inbound" moveToDirectory="${kids.inbound.file.address}/save">
                      <filter ref="regexFileFilter"/>
                    </file:inbound-endpoint>
                  </inbound>
		  <component class="com.kewill.kcx.component.audit.DispatchAuditCreate"/>
                  <outbound>
                    <pass-through-router>
                      <vm:outbound-endpoint path="client.kids.to.bob.transform.queue"/>
                    </pass-through-router>
                  </outbound>
                </service>

                <service name="clientUIDSToBOBService">
                  <inbound>
                    <file:inbound-endpoint path="${uids.inbound.file.address}" connector-ref="fileConnector-Inbound" moveToDirectory="${uids.inbound.file.address}/save">
                      <filter ref="regexFileFilter"/>
                    </file:inbound-endpoint>
                  </inbound>
		  <component class="com.kewill.kcx.component.audit.DispatchAuditCreate"/>
                  <outbound>
                    <pass-through-router>
                      <vm:outbound-endpoint path="client.uids.to.bob.transform.queue"/>
                    </pass-through-router>
                  </outbound>
                </service>

		<!-- disable or enhance this piece depending on capabilities of client -->
		<service name="ToClientFunctionalAcknowledgementService">
		  <inbound>
		    <vm:inbound-endpoint path="to.client.functional.acknowledgement.queue"/>
		  </inbound>
		  <component>
		    <prototype-object class="com.kewill.kcx.component.receipt.CreateFunctionalAcknowledgementComponent">
		    	<property key="propertyNames" value="CUSTOMER_ID,CUSTOMER_MESSAGE_ID,CUSTOMS_ID"/>
		    </prototype-object>
		  </component>  
		  <outbound>
                    <pass-through-router>
		      <file:outbound-endpoint path="${de.outbound.file.functional.acknowledgement.address}" connector-ref="fileConnector-Outbound"/>
		    </pass-through-router>
		  </outbound>
		</service>
	</model>
</mule>
